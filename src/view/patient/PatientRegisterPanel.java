package view.patient;

import model.Doctor;
import model.Encounter;
import model.Patient;
import view.doctor.LoginFram;

import javax.swing.*;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;

/**
 *
 * @author qiaotong
 */
public class PatientRegisterPanel extends javax.swing.JPanel {
    private List<Patient> patientList;
    private HashMap<String, ArrayList<Doctor>> hospitals;
    private HashMap<String,ArrayList<String>> communityDirectory;
    private HashMap<String, ArrayList<String>> cityDirectory;
    private HashMap<String,ArrayList<String>> ComToPatients;
    private view.doctor.LoginFram loginFram;

    /**
     * Creates new form RegisterPanel
     */
    public PatientRegisterPanel(List<Patient> patientList, HashMap<String,ArrayList<String>> ComToPatients, HashMap<String, ArrayList<String>> cityDirectory, HashMap<String, ArrayList<Doctor>> hospitals, HashMap<String,ArrayList<String>> communityDirectory, LoginFram loginFram){
        this.patientList = patientList;
        this.ComToPatients = ComToPatients;
        this.cityDirectory = cityDirectory;
        this.communityDirectory = communityDirectory;
        this.hospitals = hospitals;
        this.loginFram = loginFram;
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        name = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        account = new javax.swing.JTextField();
        password = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        community = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        city = new javax.swing.JTextField();

        jLabel1.setText("Name");

        jButton1.setText("Register");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Account");

        jLabel3.setText("Community");

        jLabel4.setText("Password");

        jLabel5.setText("City");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addGap(269, 269, 269)
                                .addComponent(jButton1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                                .addGap(180, 180, 180)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jLabel5)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel4))
                                .addGap(120, 120, 120)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(password, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(name, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                                .addComponent(account))
                                        .addComponent(community, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                        .addComponent(city, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE))
                                .addContainerGap(170, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap(94, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel1)
                                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel2)
                                        .addComponent(account, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(36, 36, 36)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel4)
                                        .addComponent(password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel3)
                                        .addComponent(community, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel5)
                                        .addComponent(city, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(85, 85, 85)
                                .addComponent(jButton1)
                                .addGap(60, 60, 60))
        );
    }// </editor-fold>

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        String nameText = name.getText();
        String accountText = account.getText();
        String passwordText = password.getText();
        String cityText = city.getText();
        String communityText = community.getText();
        if(cityText.isEmpty() || communityText.isEmpty() || nameText.isEmpty() || accountText.isEmpty() || passwordText.isEmpty()){
            JOptionPane.showMessageDialog(this,"The input cannot be empty!!!");
            return;
        }
        Patient patient = new Patient(cityText, communityText, nameText, new LinkedList<Encounter>(), accountText, passwordText);
        //city exist
        if(cityDirectory.keySet().contains(cityText)){
            //community exist
            if(cityDirectory.get(cityText).contains(communityText)){
                //add patient
                ComToPatients.get(communityText).add(nameText);
                this.patientList.add(patient);
            }else {
                cityDirectory.get(cityText).add(communityText);
                ArrayList<String> patientList = new ArrayList<>();
                patientList.add(nameText);
                ComToPatients.put(communityText,patientList);
                this.patientList.add(patient);
            }
        }else {
            ArrayList<String> communityList = new ArrayList<>();
            communityList.add(communityText);
            cityDirectory.put(cityText,communityList);
            ArrayList<String> patientList = new ArrayList<>();
            patientList.add(nameText);
            ComToPatients.put(communityText,patientList);
            this.patientList.add(patient);
        }
        loginFram.getjSplitPane1().setRightComponent(new PatientPanel(patient, hospitals, communityDirectory, cityDirectory, loginFram));
    }


    // Variables declaration - do not modify
    private javax.swing.JTextField account;
    private javax.swing.JTextField city;
    private javax.swing.JTextField community;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField name;
    private javax.swing.JTextField password;
    // End of variables declaration
}
